/* tslint:disable */
/* eslint-disable */
/**
 * Flat Finder REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserListingsInnerListing } from './UserListingsInnerListing';
import {
    UserListingsInnerListingFromJSON,
    UserListingsInnerListingFromJSONTyped,
    UserListingsInnerListingToJSON,
} from './UserListingsInnerListing';

/**
 * 
 * @export
 * @interface UserListingsInner
 */
export interface UserListingsInner {
    /**
     * 
     * @type {string}
     * @memberof UserListingsInner
     */
    type: UserListingsInnerTypeEnum;
    /**
     * 
     * @type {UserListingsInnerListing}
     * @memberof UserListingsInner
     */
    listing: UserListingsInnerListing;
}


/**
 * @export
 */
export const UserListingsInnerTypeEnum = {
    Accommodation: 'accommodation',
    Seeking: 'seeking'
} as const;
export type UserListingsInnerTypeEnum = typeof UserListingsInnerTypeEnum[keyof typeof UserListingsInnerTypeEnum];


/**
 * Check if a given object implements the UserListingsInner interface.
 */
export function instanceOfUserListingsInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "listing" in value;

    return isInstance;
}

export function UserListingsInnerFromJSON(json: any): UserListingsInner {
    return UserListingsInnerFromJSONTyped(json, false);
}

export function UserListingsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserListingsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'listing': UserListingsInnerListingFromJSON(json['listing']),
    };
}

export function UserListingsInnerToJSON(value?: UserListingsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'listing': UserListingsInnerListingToJSON(value.listing),
    };
}

