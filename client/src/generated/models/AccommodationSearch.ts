/* tslint:disable */
/* eslint-disable */
/**
 * Flat Finder REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AccommodationSearchResultsInner } from './AccommodationSearchResultsInner';
import {
    AccommodationSearchResultsInnerFromJSON,
    AccommodationSearchResultsInnerFromJSONTyped,
    AccommodationSearchResultsInnerToJSON,
} from './AccommodationSearchResultsInner';
import type { SearchSourcesInner } from './SearchSourcesInner';
import {
    SearchSourcesInnerFromJSON,
    SearchSourcesInnerFromJSONTyped,
    SearchSourcesInnerToJSON,
} from './SearchSourcesInner';

/**
 * 
 * @export
 * @interface AccommodationSearch
 */
export interface AccommodationSearch {
    /**
     * 
     * @type {Array<AccommodationSearchResultsInner>}
     * @memberof AccommodationSearch
     */
    searchResults: Array<AccommodationSearchResultsInner>;
    /**
     * 
     * @type {Array<SearchSourcesInner>}
     * @memberof AccommodationSearch
     */
    sources: Array<SearchSourcesInner>;
}

/**
 * Check if a given object implements the AccommodationSearch interface.
 */
export function instanceOfAccommodationSearch(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "searchResults" in value;
    isInstance = isInstance && "sources" in value;

    return isInstance;
}

export function AccommodationSearchFromJSON(json: any): AccommodationSearch {
    return AccommodationSearchFromJSONTyped(json, false);
}

export function AccommodationSearchFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccommodationSearch {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'searchResults': ((json['searchResults'] as Array<any>).map(AccommodationSearchResultsInnerFromJSON)),
        'sources': ((json['sources'] as Array<any>).map(SearchSourcesInnerFromJSON)),
    };
}

export function AccommodationSearchToJSON(value?: AccommodationSearch | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'searchResults': ((value.searchResults as Array<any>).map(AccommodationSearchResultsInnerToJSON)),
        'sources': ((value.sources as Array<any>).map(SearchSourcesInnerToJSON)),
    };
}

